<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.member">	<!-- member.xml의 네임스페이스 지정 -->

	<!-- 회원 목록 | memberVO -->
	<resultMap id="memResult" type="memberVO">	<!-- SQL문을 실행한 후 반환되는 레코드들을 <typeAlias> 태그에서 지정한 memberVO 빈에 저장 -->
		<result property="id" column="id" />	<!-- 레코드의 컬럼 이름에 대해 memberVO의 같은 속성에 값을 설정함 -->
		<result property="pwd" column="pwd" />
		<result property="name" column="name" />
		<result property="email" column="email" />
		<result property="joinDate" column="joinDate" />
	</resultMap>

	<select id="selectAllMemberList" resultMap="memResult">	<!-- DAO에서 id를 이용해 해당 SQL문을 호출. 반환되는 레코드를 memResult에 저장 -->
		<![CDATA[
			select * 
			from t_member
			order by joinDate desc
		]]>
	</select>

	<!-- 회원 목록 | HashMap -->
	<resultMap id="memResult2" type="java.util.HashMap">
		<result property="id" column="id" />
		<result property="pwd" column="pwd" />
		<result property="name" column="name" />
		<result property="email" column="email" />
		<result property="joinDate" column="joinDate" />
	</resultMap>
	
	<select id="selectAllMemberList2" resultMap="memResult2">
		<![CDATA[
			select * 
			from t_member
			order by joinDate desc
		]]>
	</select>

	<!-- 이름 조회 -->
	<select id="selectName" resultType="String">
		<![CDATA[
			select name
			from t_member
			where id = 'hong'
		]]>
	</select>

	<!-- 비밀번호 조회 -->
	<select id="selectPwd" resultType="int">
		<![CDATA[ 
			select pwd
			from t_member
			where id = 'hong'
		]]>
	</select>

	<!-- 아이디 검색 -->
	<select id="selectMemberById" resultType="memberVO" parameterType="String">
		<![CDATA[
			select * from t_member
			where id = #{id}
		]]>
	</select>

	<!-- 비밀번호 검색 -->
	<select id="selectMemberByPwd" resultMap="memResult" parameterType="int">
		<![CDATA[
			select * from t_member
			where pwd = #{pwd}
		]]>
	</select>

	<!-- 회원 추가 | memberVO -->
	<insert id="insertMember" parameterType="memberVO">
		<![CDATA[
			insert into t_member (id, pwd, name, email)
			values (#{id}, #{pwd}, #{name}, #{email})
		]]>
	</insert>

	<!-- 회원 추가 | HashMap -->
	<insert id="insertMember2" parameterType="java.util.Map">
		<![CDATA[
			insert into t_member (id, pwd, name, email)
			values (#{id}, #{pwd}, #{name}, #{email})
		]]>
	</insert>

	<!-- 회원 수정 -->
	<update id="updateMember" parameterType="memberVO">
		<![CDATA[
			update t_member
			set pwd = #{pwd}, name = #{name}, email = #{email}
			where id = #{id}
		]]>
	</update>

	<!-- 회원 삭제 -->
	<delete id="deleteMember" parameterType="String">
		<![CDATA[
			delete from t_member
			where id = #{id}
		]]>
	</delete>

	<!-- 회원 검색 | if -->
	<select id="searchMember" parameterType="memberVO" resultMap="memResult">
		<![CDATA[
			select *
			from t_member
		]]>	<!-- 공통 SQL문 -->
		<where>	<!-- SQL문의 where절을 구성 -->
			<if test="name != '' and name != null">	<!-- name 속성 값을 체크해 공백과 null이 아니면 'name = name 속성 값'을 공통 SQL문 뒤에 추가  -->
				name = #{name}
			</if>
			<if test="email != '' and email != null">	<!-- email 속성 값을 체크해 공백과 null이 아니면 'email = email 속성 값'을 공통 SQL문 뒤에 추가 -->
				and email = #{email}
			</if>
		</where>
		order by joinDate desc
	</select>

	<!-- <sql id="a"> -->
	<!-- <![CDATA[ -->
	<!-- select * -->
	<!-- from t_member -->
	<!-- ]]> -->
	<!-- </sql> -->

	<!-- 회원 검색 | choose -->
	<select id="searchMember2" parameterType="memberVO" resultMap="memResult">
<!-- 		<include refid="a" /> -->
		<![CDATA[
			select *
			from t_member
		]]>
		<where>
			<choose>
				<when test="name != '' and name != null and email != '' and email != null">
					name = #{name} and email = #{email}
				</when>
				<when test="name != '' and name != null">
					name = #{name}
				</when>
				<when test="email !='' and email != null">
					email = #{email}
				</when>
			</choose>
		</where>
		order by joinDate desc
	</select>

	<!-- 회원 정보 조회 -->
	<select id="foreachSelect" resultMap="memResult" parameterType="java.util.Map">
		<!-- <include refid="a" /> -->
		<![CDATA[
			select * from t_member
		]]>
		where name in
		<foreach item="item" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
		order by joinDate desc
	</select>

<!-- 	<insert id="foreachInsert" parameterType="java.util.Map"> -->
<!-- 		<foreach item="item" collection="list" open="INSERT ALL" separator=" " close="SELECT * FROM DUAL"> -->
<!-- 			INTO t_member ( -->
<!-- 				id, -->
<!-- 				pwd, -->
<!-- 				name, -->
<!-- 				email -->
<!-- 			) -->
<!-- 			VALUES ( -->
<!-- 				#{item.id}, -->
<!-- 				#{item.pwd}, -->
<!-- 				#{item.name}, -->
<!-- 				#{item.email} -->
<!-- 			) -->
<!-- 		</foreach> -->
<!-- 	</insert> -->

<!-- 	<select id="selectLike" resultMap="memResult" parameterType="String"> -->
<!-- 		<![CDATA[ -->
<!-- 			select * -->
<!-- 			from t_member -->
<!-- 			where name like '%'#{name}'%' -->
<!-- 		]]> -->
<!-- 	</select> -->
	
	<!-- like 검색 -->
<!-- 	<select id="selectLike" resultMap="memResult" parameterType="String"> -->
<!-- 		<![CDATA[ -->
<!-- 			select * -->
<!-- 			from t_member -->
<!-- 			where name like '%' || #{name} || '%'		 -->
<!-- 		]]> -->
<!-- 	</select> -->
	
</mapper>